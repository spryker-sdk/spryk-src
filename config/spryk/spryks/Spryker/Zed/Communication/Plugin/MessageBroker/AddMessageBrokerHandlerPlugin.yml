spryk: template
description: "Adds a new *module* *message*HandlerPlugin class."
mode: both

arguments:
    module:
        inherit: true

    organization:
        inherit: true
        default: Spryker

    application:
        inherit: true
        default: Zed

    messageName:
        inherit: true

    className:
        value: "{{ module }}{{ messageName }}MessageHandlerPlugin"

    implements:
        inherit: true
        value: "Spryker/Zed/MessageBrokerExtension/Dependency/Plugin/MessageHandlerPluginInterface"

    extends:
        inherit: true
        value: "Spryker/Zed/Kernel/Communication/AbstractPlugin"

    subDirectory:
        inherit: true
        value: "Communication/Plugin/MessageBroker"

    template:
        value: Zed/Communication/Plugin/MessageBroker/MessageHandlerPluginClass.php.twig

    targetFilename:
        value: "{{ module }}{{ messageName }}MessageHandlerPlugin.php"

    targetPath:
         value: "src/{{ organization }}/{{ application }}/{{ module }}/"

postSpryks:
    - AddZedBusinessMessageBrokerMessageHandlerMethod
    - AddZedDependencyFacadeBridgeMethod:
          arguments:
              dependentModule:
                  value: "MessageBroker"
              methods:
                  value:
                      - "sendMessage"
    - AddZedBusinessFacadeMethod:
          arguments:
              allowOverride:
                  value: true
              facadeMethod:
                  value: "handle{{ messageName }}"
              input:
                  value: "\\Generated\\Shared\\Transfer\\{{ messageName }}Transfer ${{ messageName | lcfirst }}Transfer"
              output:
                  value: void
              body:
                  allowOverride: true
                  value:
                      - "$this->getFactory()->create{{ module }}MessageHandler()->handle{{ messageName }}(${{ messageName | lcfirst }}Transfer);"

    - AddZedBusinessFacadeMethodTest:
          arguments:
              allowOverride:
                  value: true
              facadeMethod:
                  value: "handle{{ messageName }}"
              output:
                  value: "void"
              body:
                  allowOverride: true
                  value:
                      - "// Arrange"
                      - "${{ messageName | lcfirst }}Transfer = new \\Generated\\Shared\\Transfer\\{{ messageName }}Transfer();"
                      - ""
                      - "        // Act"
                      - "$this->tester->getFacade()->handle{{ messageName }}(${{ messageName | lcfirst }}Transfer);"
                      - ""
                      - "        // Assert"
                      - "$this->markTestSkipped('Test needs implementation');"
