spryk: wrapper
description: 'Adds code to be able to receive a Glue request for a resource with a given HTTP method and to return a defined response.'
mode: both
level: 2
application: Glue
priority: 1
arguments:
    module:
        description: 'Based on the applicationType the module name will be suffixed with BackendApi or FrontendApi by the ResourceModuleName callback.'
        inherit: true
        default: '{{ resource | normalizeResourceName }}'
        callback: GlueResourceModuleName
    dataModule:
        inherit: true
        description: 'The module name for the Zed Application. It''s the same name as for the Glue Module but without the Api suffix.'
        value: '{{ module | removeApiSuffix | singularize }}'
    organization:
        inherit: true
        default: Spryker
    application:
        inherit: true
        default: Glue
    apiType:
        inherit: true
        description: 'Can be one of: REST or JSON'
        default: JSON
    applicationType:
        inherit: true
        description: 'Can be one of: Backend or Frontend'
        default: Backend
    suite:
        value: '{{ applicationType }}Api'
    isBulk:
        description: 'Defines if this resource should work with Collections. When set to true the method will use collections when possible.'
        value: false
    resource:
        inherit: true
        description: 'Defines the resource name this controller will work with e.g. /customers'
    httpMethod:
        description: 'The HTTP method e.g. POST'
        callback: StringToLower
    httpResponseCode:
        description: 'The HTTP response code e.g. 200 (OK)'
    controller:
        default: '{{ resource | normalizeResourceName }}ResourceController'
    zedDomainEntity:
        description: 'Defines the domainEntity used on Zed side for the CRUD Facade. It will be used to create all needed Transfer Objects.'
        default: '{{ resource | normalizeResourceName | singularize }}'
    resourceDataObject:
        description: 'Defines the Transfer that will be used in the Controller. Do not use Transfer as suffix, it will be added automatically. Example: Customer (ok) CustomerTransfer (wrong).'
        default: '{{ resource | normalizeResourceName | singularize }}'
postSpryks:
    - AddGlueBackendApiApplication
    - AddGlueBackendApiRequestMapper
    - AddGlueBackendApiResponseMapper
    - AddGlueBackendApiResourcePlugin
    -
        AddCrudFacade:
            condition: 'applicationType === ''Backend'''
            arguments:
                module: '{{ dataModule }}'
                domainEntity: '{{ zedDomainEntity | ucfirst }}'
    -
        AddDependencyTypeToDependencyProvider:
            condition: 'applicationType === ''Backend'''
            arguments:
                dependentModule: '{{ dataModule }}'
                dependencyType: Facade
    -
        AddDependencyBridgeMethod:
            condition: 'applicationType === ''Backend'' && httpMethod === ''get'''
            arguments:
                dependentModule: '{{ dataModule }}'
                dependencyType: Facade
                methods:
                    - 'get{{ zedDomainEntity }}Collection'
    -
        AddDependencyBridgeMethod:
            condition: 'applicationType === ''Backend'' && httpMethod === ''post'''
            arguments:
                dependentModule: '{{ dataModule }}'
                dependencyType: Facade
                methods:
                    - 'create{{ zedDomainEntity }}Collection'
    -
        AddDependencyBridgeMethod:
            condition: 'applicationType === ''Backend'' && httpMethod === ''patch'''
            arguments:
                dependentModule: '{{ dataModule }}'
                dependencyType: Facade
                methods:
                    - 'update{{ zedDomainEntity }}Collection'
    -
        AddDependencyBridgeMethod:
            condition: 'applicationType === ''Backend'' && httpMethod === ''delete'''
            arguments:
                dependentModule: '{{ dataModule }}'
                dependencyType: Facade
                methods:
                    - 'delete{{ zedDomainEntity }}Collection'
    -
        AddDependencyTypeToDependencyProvider:
            condition: 'applicationType === ''Frontend'''
            arguments:
                dependentModule: '{{ dataModule }}'
                dependencyType: Client
    -
        AddGlueBackendApiControllerMethodGet:
            condition: 'applicationType === ''Backend'' && httpMethod === ''get'' && isBulk === false'
    -
        AddGlueBackendApiControllerMethodGetCollection:
            condition: 'applicationType === ''Backend'' && httpMethod === ''get'' && isBulk === true'
    -
        AddGlueBackendApiControllerMethodPost:
            condition: 'applicationType === ''Backend'' && httpMethod === ''post'''
    -
        AddGlueBackendApiControllerMethodPatch:
            condition: 'applicationType === ''Backend'' && httpMethod === ''patch'''
    -
        AddGlueBackendApiControllerMethodDelete:
            condition: 'applicationType === ''Backend'' && httpMethod === ''delete'' && isBulk === false'
    -
        AddGlueBackendApiControllerMethodDeleteCollection:
            condition: 'applicationType === ''Backend'' && httpMethod === ''delete'' && isBulk === true'
    - AddGlueTestCodeceptionConfiguration
    - AddGlueTestHelper
