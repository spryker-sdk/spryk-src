spryk: wrapper
description: 'Adds a new GlueBackendApi Application.'
mode: both
arguments:
    module:
        inherit: true
    organization:
        inherit: true
        default: Spryker
    application:
        inherit: true
        default: Glue
    apiType:
        default: JSON
    applicationType:
        default: Backend
preSpryks:
    - AddComposerJson
    -
        UpdateJson:
            arguments:
                target: require
                key: spryker/glue-backend-api-application
                value: ^0.2.0
                targetFilename: composer.json
    -
        UpdateJson:
            arguments:
                target: require
                key: spryker/glue-application
                value: ^1.39.0
                targetFilename: composer.json
    -
        UpdateJson:
            arguments:
                target: require
                key: spryker/glue-http
                value: ^0.2.0
                targetFilename: composer.json
    -
        UpdateJson:
            condition: 'apiType === ''REST'''
            arguments:
                target: require
                key: spryker/glue-rest-api-convention
                value: ^0.2.0
                targetFilename: composer.json
    -
        UpdateJson:
            condition: 'apiType === ''JSON'''
            arguments:
                target: require
                key: spryker/glue-json-api-convention
                value: ^0.2.0
                targetFilename: composer.json
    -
        AddFileFromTemplate:
            arguments:
                targetFilename: index.php
                targetPath: public/BackendApi/
                template: Spryker/Glue/BackendApi/index.php.twig
    -
        AddFileFromTemplate:
            arguments:
                targetFilename: GlueBackendApiBootstrap.php
                targetPath: 'src/{{ organization }}/Glue/GlueApplication/Bootstrap'
                template: Spryker/Glue/BackendApi/GlueBackendApiBootstrap.php.twig
    -
        AddGlueCommonDependencyProvider:
            arguments:
                module: GlueApplication
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider'
                method: getGlueApplicationBootstrapPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\GlueApplicationBootstrapPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider'
                method: getGlueContextExpanderPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\GlueContextExpanderPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider'
                method: getCommunicationProtocolPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\CommunicationProtocolPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider'
                method: getApiConventionPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ApiConventionPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider'
                method: getResourceFilterPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ResourceFilterPluginInterface>
                withInterface: false
    -
        AddGlueDependencyProvider:
            arguments:
                module: GlueBackendApiApplication
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getApplicationPlugins
                body: 'return [];'
                output: array<\Spryker\Shared\ApplicationExtension\Dependency\Plugin\ApplicationPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getRequestBuilderPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueBackendApiApplicationExtension\Dependency\Plugin\RequestBuilderPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getRequestAfterRoutingValidatorPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueBackendApiApplicationExtension\Dependency\Plugin\RequestAfterRoutingValidatorPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getResponseFormatterPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueBackendApiApplicationExtension\Dependency\Plugin\ResponseFormatterPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getRouterPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueBackendApiApplicationExtension\Dependency\Plugin\RouterPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getRouteMatcherPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueBackendApiApplicationExtension\Dependency\Plugin\RouteMatcherPluginInterface>
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getRequestResourceFilterPlugin
                body: 'return new \Spryker\Glue\GlueApplication\Plugin\GlueApplication\RequestResourceFilterPlugin();'
                output: \Spryker\Glue\GlueBackendApiApplicationExtension\Dependency\Plugin\RequestResourceFilterPluginInterface
                withInterface: false
    -
        AddMethod:
            arguments:
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider'
                method: getResourcePlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueApplicationExtension\Dependency\Plugin\ResourceInterface>
                withInterface: false
    -
        AddGlueCommonDependencyProvider:
            condition: 'apiType === ''REST'''
            arguments:
                module: GlueRestApiConvention
    -
        AddMethod:
            condition: 'apiType === ''REST'''
            arguments:
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider'
                method: getResponseEncoderPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueRestApiConventionExtension\Dependency\Plugin\ResponseEncoderPluginInterface>
                withInterface: false
    -
        AddMethod:
            condition: 'apiType === ''REST'''
            arguments:
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider'
                method: getRequestBuilderPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueRestApiConventionExtension\Dependency\Plugin\RequestBuilderPluginInterface>
                withInterface: false
    -
        AddMethod:
            condition: 'apiType === ''REST'''
            arguments:
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider'
                method: getRequestValidatorPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueRestApiConventionExtension\Dependency\Plugin\RequestValidatorPluginInterface>
                withInterface: false
    -
        AddMethod:
            condition: 'apiType === ''REST'''
            arguments:
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider'
                method: getResponseFormatterPlugins
                body: 'return [];'
                output: array<\Spryker\Glue\GlueRestApiConventionExtension\Dependency\Plugin\ResponseFormatterPluginInterface>
                withInterface: false
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Glue\GlueBackendApiApplication\Plugin\GlueApplication\BackendApiGlueApplicationBootstrapPlugin
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider::getGlueApplicationBootstrapPlugins'
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Glue\GlueHttp\Plugin\GlueContext\HttpGlueContextExpanderPlugin
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider::getGlueContextExpanderPlugins'
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Glue\GlueHttp\Plugin\GlueApplication\HttpCommunicationProtocolPlugin
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider::getCommunicationProtocolPlugins'
    -
        WirePlugin:
            condition: 'apiType === ''REST'''
            arguments:
                plugin:
                    - \Spryker\Glue\GlueRestApiConvention\Plugin\GlueApplication\RestApiConventionPlugin
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider::getApiConventionPlugins'
    -
        WirePlugin:
            condition: 'apiType === ''JSON'''
            arguments:
                plugin:
                    - \Spryker\Glue\GlueJsonApiConvention\Plugin\GlueApplication\JsonApiApiConventionPlugin
                target: '\{{ organization }}\Glue\GlueApplication\GlueApplicationDependencyProvider::getApiConventionPlugins'
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Zed\Propel\Communication\Plugin\Application\PropelApplicationPlugin
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider::getApplicationPlugins'
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Glue\GlueHttp\Plugin\GlueBackendApiApplication\CorsHeaderExistenceRequestAfterRoutingValidatorPlugin
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider::getRequestAfterRoutingValidatorPlugins'
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Glue\GlueBackendApiApplication\Plugin\GlueBackendApiApplication\SecurityHeaderResponseFormatterPlugin
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider::getResponseFormatterPlugins'
    -
        WirePlugin:
            arguments:
                plugin: \Spryker\Glue\GlueApplication\Plugin\GlueApplication\ResourceRouteMatcherPlugin
                target: '\{{ organization }}\Glue\GlueBackendApiApplication\GlueBackendApiApplicationDependencyProvider::getRouteMatcherPlugins'
    -
        WirePlugin:
            condition: 'apiType === ''REST'''
            arguments:
                plugin: \Spryker\Glue\GlueRestApiConvention\Plugin\GlueRestApiConvention\JsonResponseEncoderPlugin
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider::getResponseEncoderPlugins'
    -
        WirePlugin:
            condition: 'apiType === ''REST'''
            arguments:
                plugin:
                    - \Spryker\Glue\GlueRestApiConvention\Plugin\GlueRestApiConvention\FormatRequestBuilderPlugin
                    - \Spryker\Glue\GlueRestApiConvention\Plugin\GlueRestApiConvention\PaginationRequestBuilderPlugin
                    - \Spryker\Glue\GlueRestApiConvention\Plugin\GlueRestApiConvention\SortRequestBuilderPlugin
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider::getRequestBuilderPlugins'
    -
        WirePlugin:
            condition: 'apiType === ''REST'''
            arguments:
                plugin: \Spryker\Glue\GlueRestApiConvention\Plugin\GlueRestApiConvention\AcceptFormatRequestValidatorPlugin
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider::getRequestValidatorPlugins'
    -
        WirePlugin:
            condition: 'apiType === ''REST'''
            arguments:
                plugin: \Spryker\Glue\GlueRestApiConvention\Plugin\GlueRestApiConvention\RestApiResponseFormatterPlugin
                target: '\{{ organization }}\Glue\GlueRestApiConvention\GlueRestApiConventionDependencyProvider::getResponseFormatterPlugins'
