spryk: template
description: "Adds a new GlueBackendApi Resource Plugin."
mode: both

arguments:
    module:
        inherit: true

    organization:
        inherit: true
        default: Spryker

    apiType:
        default: JSON

    resource:
        description: "Defines the resource name this resource plugin will work with."

    className:
        value: "{{ resource }}Resource"

    extends:
        value: "\\Spryker\\Glue\\GlueApplication\\Plugin\\GlueApplication\\AbstractResourcePlugin"

    template:
        value: Common/Class.php.twig

    targetFilename:
        value: "{{ resource }}Resource.php"

    targetPath:
        value: "src/{{ organization }}/Glue/{{ module }}/"

    application:
        value: Glue

    subDirectory:
        value: Plugin

postSpryks:
    - AddMethod:
          arguments:
              method:
                  value: "getType"
              output:
                  value: "string"
              body:
                  value:
                      - "return '{{ resource | dasherize }}';"
              target:
                  value: "\\{{ organization }}\\Glue\\{{ module }}\\Plugin\\{{ resource }}Resource"
              withInterface:
                  value: false
    - AddMethod:
          arguments:
              method:
                  value: "getController"
              annotations:
                  value:
                      - "@uses \\{{ organization }}\\Glue\\{{ module }}\\Controller\\{{ resource }}ResourceController"
              output:
                  value: "string"
              body:
                  value:
                      - "return \\{{ organization }}\\Glue\\{{ module }}\\Controller\\{{ resource }}ResourceController::class;"
              target:
                  value: "\\{{ organization }}\\Glue\\{{ module }}\\Plugin\\{{ resource }}Resource"
              withInterface:
                  value: false
    - AddMethod:
          arguments:
              method:
                  value: "getDeclaredMethods"
              output:
                  value: "\\Generated\\Shared\\Transfer\\GlueResourceMethodCollectionTransfer"
              body:
                  value:
                      - "return (new \\Generated\\Shared\\Transfer\\GlueResourceMethodCollectionTransfer());"
              target:
                  value: "\\{{ organization }}\\Glue\\{{ module }}\\Plugin\\{{ resource }}Resource"
              withInterface:
                  value: false
    - WirePlugin:
          arguments:
              plugin:
                  value: "\\{{ organization }}\\Glue\\{{ module }}\\Plugin\\{{ resource }}Resource"
              target:
                  value: "\\Spryker\\Glue\\GlueBackendApiApplication\\GlueBackendApiApplicationDependencyProvider::getResourcePlugins"
    - AddImplements:
          condition: "apiType === 'REST'"
          arguments:
              interface:
                  value: "Spryker\\Glue\\GlueRestApiConventionExtension\\Dependency\\Plugin\\RestResourceInterface"
              target:
                  value: "\\{{ organization }}\\Glue\\{{ module }}\\Plugin\\{{ className }}"
    - AddImplements:
          condition: "apiType === 'JSON'"
          arguments:
              interface:
                  value: "Spryker\\Glue\\GlueJsonApiConventionExtension\\Dependency\\Plugin\\JsonApiResourceInterface"
              target:
                  value: "\\{{ organization }}\\Glue\\{{ module }}\\Plugin\\{{ className }}"

