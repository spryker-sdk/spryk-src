spryk: template
description: 'Adds a new Response ResponseMapper that maps {{ zedDomainEntity }} transfers to a GlueResponseTransfer.'
mode: both
level: 2
arguments:
    module:
        description: 'Module name should be suffixed either with Api or with BackendApi depending on the choosen applicationType.'
        inherit: true
        default: '{{ resource | normalizeResourceName }}{% if applicationType == ''Frontend'' %}Api{% else %}BackendApi{% endif %}'
    organization:
        inherit: true
        default: Spryker
    className:
        value: 'GlueResponse{{ resourceDataObject }}Mapper'
    resource:
        description: 'Defines the resource name this controller will work with.'
    subDirectory:
        inherit: true
        value: Mapper
    application:
        inherit: true
        value: Glue
    applicationType:
        inherit: true
        description: 'Can be one of: Backend or Frontend'
        default: Backend
    isTestClass:
        inherit: true
        isOptional: true
        default: false
    resourceDataObject:
        description: 'Defines the Transfer that will be used in the Methods. Do not use Transfer as suffix, it will be added automatically. Example: Customer (ok) CustomerTransfer (wrong)'
        isOptional: true
        value: '{{ resource | normalizeResourceName | singularize }}'
    template:
        value: Common/Class.php.twig
    zedDomainEntity:
        description: 'Defines the domainEntity used on Zed side for the CRUD Facade. It will be used to create all needed Transfer Objects.'
        value: '{{ resource | normalizeResourceName | singularize }}'
    implements:
        value: '\{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}MapperInterface'
    target:
        value: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
    targetFilename:
        value: '{{ className }}.php'
    targetPath:
        value: 'src/{{ organization }}/Glue/{{ module }}/'
preSpryks:
    - AddGlueBackendApiController
postSpryks:
    -
        AddMethod:
            arguments:
                method: 'map{{ zedDomainEntity }}CollectionTransferToGlueResponseTransfer'
                input: '\Generated\Shared\Transfer\{{ zedDomainEntity }}CollectionTransfer ${{ zedDomainEntity | lcfirst }}CollectionTransfer'
                output: \Generated\Shared\Transfer\GlueResponseTransfer
                body: Glue/BackendApi/ResponseMapper/MapCollectionTransferToGlueResponseTransfer.php.twig
                target: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
    -
        AddMethod:
            arguments:
                method: 'map{{ zedDomainEntity }}CollectionTransferToSingleResourceGlueResponseTransfer'
                input: '\Generated\Shared\Transfer\{{ zedDomainEntity }}CollectionTransfer ${{ zedDomainEntity | lcfirst }}CollectionTransfer'
                output: \Generated\Shared\Transfer\GlueResponseTransfer
                body: Glue/BackendApi/ResponseMapper/MapCollectionTransferToSingleResourceGlueResponseTransfer.php.twig
                target: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
    -
        AddMethod:
            arguments:
                method: 'map{{ zedDomainEntity }}CollectionResponseTransferToGlueResponseTransfer'
                input: '\Generated\Shared\Transfer\{{ zedDomainEntity }}CollectionResponseTransfer ${{ zedDomainEntity | lcfirst }}CollectionResponseTransfer'
                output: \Generated\Shared\Transfer\GlueResponseTransfer
                body: Glue/BackendApi/ResponseMapper/MapCollectionResponseTransferToGlueResponseTransfer.php.twig
                target: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
    -
        AddMethod:
            arguments:
                method: 'map{{ zedDomainEntity }}CollectionResponseTransferToSingleResourceGlueResponseTransfer'
                input: '\Generated\Shared\Transfer\{{ zedDomainEntity }}CollectionResponseTransfer ${{ zedDomainEntity | lcfirst }}CollectionResponseTransfer'
                output: \Generated\Shared\Transfer\GlueResponseTransfer
                body: Glue/BackendApi/ResponseMapper/MapCollectionResponseTransferToSingleResourceGlueResponseTransfer.php.twig
                target: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
    -
        AddMethod:
            arguments:
                method: addNotFoundError
                visbility: protected
                input: '\Generated\Shared\Transfer\GlueResponseTransfer $glueResponseTransfer'
                output: \Generated\Shared\Transfer\GlueResponseTransfer
                body: Glue/BackendApi/ResponseMapper/AddNotFoundError.php.twig
                target: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
                zedDomainEntity:
                    inherit: true
                withInterface: false
    -
        AddMethod:
            arguments:
                method: 'add{{ zedDomainEntity }}TransferToGlueResponse'
                visbility: protected
                input:
                    - '\Generated\Shared\Transfer\{{ zedDomainEntity }}Transfer ${{ zedDomainEntity | lcfirst }}Transfer'
                    - '\Generated\Shared\Transfer\GlueResponseTransfer $glueResponseTransfer'
                output: \Generated\Shared\Transfer\GlueResponseTransfer
                body: Glue/BackendApi/ResponseMapper/AddResourceToGlueResponse.php.twig
                target: '{{ organization }}\Glue\{{ module }}\Mapper\GlueResponse{{ resourceDataObject }}Mapper'
                zedDomainEntity:
                    inherit: true
                withInterface: false
    -
        AddGlueFactoryMethod:
            arguments:
                subDirectory: Mapper
                className: 'GlueResponse{{ resourceDataObject }}Mapper'
