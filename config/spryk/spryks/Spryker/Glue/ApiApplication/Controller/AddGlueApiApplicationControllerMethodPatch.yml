name: AddGlueApiApplicationControllerMethodPatch
spryk: wrapper
description: "Adds a new method to the Glue controller."
mode: both
level: 2

arguments:
    module:
        inherit: true

    dataModule:
        inherit: true
        description: "The module name for the Zed Application. It's the same name as for the Glue Module but without the Api suffix."
        value: "{{ module | removeApiSuffix | singularize }}"

    organization:
        inherit: true
        default: Spryker

    application:
        inherit: true
        default: Glue

    httpMethod:
        inherit: true
        default: "patch"

    apiType:
        inherit: true
        description: "Can be JSON only as for now."
        default: "JSON"

    applicationType:
        inherit: true
        description: "Can be one of: Backend or Storefront"
        default: "Backend"

    resource:
        inherit: true
        description: "Defines the resource name this resource plugin will work with."

    controller:
        inherit: true
        description: "Defines the Controller name to use."
        default: "{{ resource | resourceNameToControllerName }}"
        callback:
            - EnsureResourceControllerSuffixCallback    # Ensure we always have ResourceController as suffix

    zedDomainEntity:
        inherit: true
        description: "Defines the domainEntity used on Zed side for the CRUD Facade. It will be used to create all needed Transfer Objects."
        default: "{{ resource | resourceNameToModelName | singularize }}"

    resourceDataObject:
        description: "Defines the Transfer that will be used in the Methods. Do not use Transfer as suffix, it will be added automatically. Example: Customer (ok) CustomerTransfer (wrong)"
        value: "{{ resource | resourceNameToModelName }}"

    target:
        value: "{{ organization }}\\Glue\\{{ module }}\\Controller\\{{ controller }}"

    input:
        inherit: true
        default: "\\Generated\\Shared\\Transfer\\{{ zedDomainEntity }}Transfer ${{ zedDomainEntity | lcfirst }}Transfer, \\Generated\\Shared\\Transfer\\GlueRequestTransfer $glueRequestTransfer"

preSpryks:
    # Add the Api Controller
    - AddGlueApiApplicationController
    - AddGlueTestApiCest

postSpryks:
    - AddGlueApiApplicationFactory
    # Add controller patchAction
    - AddMethod:
          arguments:
              method:
                  value: "patchAction"
              input:
                  - "\\Generated\\Shared\\Transfer\\GlueRequestTransfer $glueRequestTransfer"
              output:
                  value: "\\Generated\\Shared\\Transfer\\GlueResponseTransfer"
              dataModule:
                  inherit: true
              applicationType:
                  inherit: true
              zedDomainEntity:
                  inherit: true
              resourceDataObject:
                  inherit: true
              body:
                  value: Glue/ApiApplication/Controller/PatchMethod.php.twig
              target:
                  value: "{{ organization }}\\Glue\\{{ module }}\\Controller\\{{ controller }}"
              withInterface:
                  value: false

