name: AddGlueApiApplicationController
spryk: wrapper
description: "Adds a new Glue Controller to the Glue Application."
mode: both
level: 3

arguments:
    module:
        description: "Based on the applicationType the module name will be suffixed with BackendApi or StorefrontApi by the ResourceModuleName callback."
        inherit: true
        default: "{{ resource | resourceNameToModuleName }}"
        callback: GlueResourceModuleName

    organization:
        inherit: true
        default: Spryker

    application:
        inherit: true
        value: Glue

    applicationType:
        inherit: true
        description: "Can be one of: Backend or Storefront"
        default: "Backend"

    isTestClass:
        inherit: true
        isOptional: true
        default: false

    resource:
        inherit: true
        description: "Defines the resource name this resource plugin will work with."

    subDirectory:
        inherit: true
        value: Controller

    controller:
        inherit: true
        default: "{{ resource | resourceNameToControllerName }}ResourceController"

preSpryks:
    # Add Glue{{ applicationType }}ApiApplication
    - AddGlueDependencyProvider:
          arguments:
              module:
                  value: "Glue{{ applicationType }}ApiApplication"

postSpryks:
    - AddGlueFactory
    - AddClass:
          condition: "isTestClass === false && applicationType !== 'Storefront'"
          arguments:
              subDirectory:
                  value: Controller
              className:
                  value: "{{ controller }}"
              extends:
                  callback: ResolveExtends
                  value:
                      - "\\Spryker\\Glue\\{{ module }}\\Controller\\{{ controller }}"
                      - "\\Spryker\\Glue\\Kernel\\{{applicationType}}\\Controller\\AbstractController"
              annotations:
                  value:
                      - "@method \\{{ organization }}\\Glue\\{{ module }}\\{{ module }}Factory getFactory()"
    - AddClass:
          condition: "isTestClass === false && applicationType === 'Storefront'"
          arguments:
              subDirectory:
                  value: Controller
              className:
                  value: "{{ controller }}"
              extends:
                  callback: ResolveExtends
                  value:
                      - "\\Spryker\\Glue\\{{ module }}\\Controller\\{{ controller }}"
                      - "\\Spryker\\Glue\\Kernel\\Controller\\AbstractController"
              annotations:
                  value:
                      - "@method \\{{ organization }}\\Glue\\{{ module }}\\{{ module }}Factory getFactory()"

    - AddClass:
          condition: "isTestClass === true"
          arguments:
              subDirectory:
                  value: Controller
              className:
                  value: "{{ controller }}"
              extends:
                  callback: ResolveExtends
                  value:
                      - "\\Codeception\\Test\\Unit"
              isTestClass:
                  value: true
