${{ domainEntity | lcfirst }}CollectionTransfer = new {{ domainEntity }}CollectionTransfer();
${{ domainEntity | lcfirst }}Query = $this->getFactory()->create{{ domainEntity }}Query();

// Filter
${{ domainEntity | lcfirst }}Query = $this->apply{{ domainEntity }}Filters(${{ domainEntity | lcfirst }}Query, ${{ domainEntity | lcfirst }}CriteriaTransfer);

// Sort
${{ domainEntity | lcfirst }}Query = $this->apply{{ domainEntity }}Sorting(${{ domainEntity | lcfirst }}Query, ${{ domainEntity | lcfirst }}CriteriaTransfer);

// Paginate only if the transfer is present
// This can be different as well, if it not present you might want to fall back to "page 1" by default
// Again, this is an EXAMPLE, the concrete implementation will depend on each case
$paginationTransfer = ${{ domainEntity | lcfirst }}CriteriaTransfer->getPagination();
if ($paginationTransfer !== null) {
    $objectCollection = $this->applyEntityPagination(${{ domainEntity | lcfirst }}Query, $paginationTransfer);
    ${{ domainEntity | lcfirst }}CollectionTransfer->setPagination($paginationTransfer);

    return $this->getFactory()->create{{ domainEntity }}Mapper()->map{{ domainEntity }}EntityCollectionTo{{ domainEntity }}CollectionTransfer($objectCollection, ${{ domainEntity | lcfirst }}CollectionTransfer);
}

$objectCollection = ${{ domainEntity | lcfirst }}Query->find();

return $this->getFactory()->create{{ domainEntity }}Mapper()->map{{ domainEntity }}EntityCollectionTo{{ domainEntity }}CollectionTransfer($objectCollection, ${{ domainEntity | lcfirst }}CollectionTransfer);
